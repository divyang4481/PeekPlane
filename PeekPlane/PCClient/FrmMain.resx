<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPlaneProgress.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2v3rvRUAAAAASUVORK5CYII=
</value>
  </data>
</root>